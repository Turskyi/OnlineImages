package io.github.turskyi.onlineimages.di

import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.android.components.ApplicationComponent
import io.github.turskyi.onlineimages.data.api.UnsplashApi
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import javax.inject.Singleton

/* the methods in this Module are never called manually,
* these are instructions for dagger how to call them.
* InstallIn is an annotation from Hilt to identify scope of this module,
* and ApplicationComponent is an autogenerated class by hilt,
* which identify that all provided classes should live as long as "component" */
@Module
@InstallIn(ApplicationComponent::class)
object AppModule {

    @Provides
    @Singleton
    fun provideRetrofit(): Retrofit =
        Retrofit.Builder()
            .baseUrl(UnsplashApi.BASE_URL)
            .addConverterFactory(GsonConverterFactory.create())
            .build()

    // since we already declared how to get retrofit we now can pass it as a parameter
    @Provides
    @Singleton
    fun provideUnsplashApi(retrofit: Retrofit): UnsplashApi =
        retrofit.create(UnsplashApi::class.java)

}